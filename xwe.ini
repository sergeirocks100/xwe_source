;
; eXtendable Wad Editor Info file
; -------------------------------
;
; Feel free to play around with this file.
;

(OPTIONS)
NOREGISTRY=0
NOMRU=0
FILTER_TOOLBAR_TOP=1

[LUMP]
;Entry : "*"
;Editor : ImageEditor
Entry : "GL_PVS"

[MAP]
Entry : MAP##;E#M#;E#M##;D#DM*;D#CTF*;MENUMAP
Editor : MapEditor
Icon : map

[COLORMAP]
SectionStart : "C_START;CC_START"
SectionEnd : "C_END;CC_END"
Entry : "COLORMAP;FORMAP;colormap.lmp"
Editor : ColorMapEditor
Icon : palette

[TEXTSCREEN]
Entry : "ENDOOM;DOOMERR;END1.BIN;DUKESW.BIN;SHAREEND;SHADSW.BIN;"
Entry : "NOMEMORY.BIN;DOSTEXT.BIN"
Editor : TextScreenEditor

[TEXTURE]
Entry : "TEXTURE#"
Editor : TextureEditor

[PATCHNAMES]
Entry : "PNAMES"
Editor : PatchNamesEditor

[DEMO]
Entry : "DEMO#"
Editor : DemoEditor
Icon : demo

[THINGS]
Entry : "THINGS"
Editor : GridEditor

; doom format

;2 INT "X Position"
;2 INT "Y Position"
;2 INT "Angle"
;2 INT "Type"
;2 INT "Flags"

2 INT "Tag"
2 INT "X Pos"
2 INT "Y Pos"
2 INT "Z Pos"
2 INT "Angle"
2 INT "Type"
2 INT "Flags"
1 INT "Special"
1 INT "Arg1"
1 INT "Arg2"
1 INT "Arg3"
1 INT "Arg4"
1 INT "Arg5"

[LINEDEFS]
Entry : "LINEDEFS;LINES"
;Editor : LineDefsEditor
Editor : GridEditor

2 INT "Start Vertex"
2 INT "End Vertex"
2 INT "Flags"

;1 INT "TYPE"
;1 INT "ARG1"
;1 INT "ARG2"
;1 INT "ARG3"
;1 INT "ARG4"
;1 INT "ARG5"

2 INT "Type"
2 INT "Tag"

2 INT "Front"
2 INT "Back"

[SIDEDEFS]
Entry : "SIDEDEFS"
Editor : GridEditor
2 INT "X Offset"
2 INT "Y Offset"
8 TEXTURENAME "Above"
8 TEXTURENAME "Below"
8 TEXTURENAME "Main"
2 INT "Sector"

[VERTEXES]
Entry : "VERTEXES"
Editor : GridEditor
;Editor : VertexEditor
2 INT "X Position"
2 INT "Y Position"

[SEGS]
Entry : "SEGS"
Editor : GridEditor
2 INT "Unknown"
2 INT "Unknown"
2 INT "Unknown"
2 INT "Unknown"
2 INT "Unknown"
2 INT "Unknown"

[SSECTORS]
Entry : "SSECTORS"
Editor : GridEditor
2 INT "Unknown"
2 INT "Unknown"

[NODES]
Entry : "NODES"
Editor : GridEditor
2 INT "Unknown"
2 INT "Unknown"
2 INT "Unknown"
2 INT "Unknown"
2 INT "Unknown"
2 INT "Unknown"
2 INT "Unknown"

[SECTOR]
Entry : "SECTORS"
Editor : GridEditor
2 INT "Floor"
2 INT "Ceiling"
8 TEXTURENAME "Floor"
8 TEXTURENAME "Ceiling"
2 INT "Light"
2 INT "Type"
2 INT "Tag"

[REJECTMAP]
Entry : "REJECT"
Editor : HexEditor

[BLOCKMAP]
Entry : "BLOCKMAP"
Editor : HexEditor

[ACS]
SectionStart : "A_START"
SectionEnd : "A_END"
Entry : "BEHAVIOR"
Editor : HexEditor

[ACSSCRIPT]
Entry : "SCRIPTS;SCRIPT##"
Editor : ScriptEditor,ACSSCRIPT

[DEHACKED]
Entry : "DEHACKED"
Editor : ScriptEditor
;,DEHACKED

[MAPINFO]
Entry : "MAPINFO;D1INFO;D2INFO;PLUTINFO;TNTINFO;HERINFO;STRFINFO"
Editor : ScriptEditor,MAPINFO
Icon : zdoom

[TERRAIN ZDOOM]
Entry : "TERRAIN"
Editor : ScriptEditor,TERRAIN
Icon : zdoom

[DECALDEF]
Entry : "DECALDEF"
Editor : ScriptEditor,DECALDEF
Icon : zdoom

[DECORATE]
Entry : "DECORATE"
Editor : ScriptEditor,DECORATE
Icon : zdoom

[SNDINFO]
Entry : "SNDINFO"
Editor : ScriptEditor,SNDINFO
Icon : zdoom

[SNDSEQ]
Entry : "SNDSEQ"
Editor : ScriptEditor,SNDSEQ
Icon : zdoom

[SNDEAX]
Entry : "SNDEAX"
Editor : ScriptEditor,SNDEAX
Icon : zdoom

[ANIMDEFS]
Entry : "ANIMDEFS"
Editor : ScriptEditor,ANIMDEFS
Icon : zdoom

[KEYCONF]
Entry : "KEYCONF"
Editor : ScriptEditor,KEYCONF
Icon : zdoom

[DDF]
Entry : "DDFLANG;DDFATK;DDFWEAP;DDFTHING;DDFSFX;DDFLEVL;DDFSECT;DDFLINE;DDFPLAY;DDFCOLM;DDFANIM;DDFGAME;DDFSWTH;DDFFONT;DDFIMAGE;DDFSTYLE"
Editor : ScriptEditor,DDF

[SPRITE]
SectionStart : "S_START;SS_START"
SectionEnd : "S_END;SS_END"
Editor : ImageEditor
Icon : sprite

[FLOOR]
SectionStart : "F_START;FF_START"
SectionEnd : "F_END;FF_END"
Editor : ImageEditor
Icon : floor

[PATCH]
SectionStart : "P_START;PP_START;TX_START"
SectionEnd : "P_END;PP_END;TX_END"
Editor : ImageEditor
Icon : image

[GFX]
; doom 1 and doom 2 gfx lumps
Entry : "AMMNUM#;BOSSBACK;BRDR_*;CREDIT;CWILV##;END#;HELP;HELP#;INTERPIC;M_DETAIL;M_DISOPT;M_DISP;M_DOOM;M_ENDGAM;M_EPI#;M_EPISOD;M_GDHIGH;M_GDLOW;M_HURT;M_JKILL;M_LGTTL;M_LOADG;M_LSCNTR;M_LSLEFT;M_LSRGHT;M_MESSG;M_MSENS;M_MSGOFF;M_MSGON;M_MUSVOL;M_NEWG;M_NGAME;M_NMARE;M_OPTION;M_OPTTTL;M_PAUSE;M_QUITG;M_RDTHIS;M_ROUGH;M_SAVEG;M_SCRNSZ;M_SFXVOL;M_SGTTL;M_SKILL;M_SKULL#;M_SVOL;M_THERM?;M_ULTRA;PFUB#;STARMS;STBAR;STCDROM;STCFN###;STDISK;STFB#;STFDEAD0;STFEVL#;STFGOD0;STFKILL#;STFOUCH#;STFST##;STFTL##;STFTR##;STGNUM#;STKEYS#;STPB#;STTMINUS;STTNUM#;STTPRCNT;STYSNUM#;TITLEPIC;VICTORY2;WIA#####;WIBP#;WICOLON;WIENTER;WIF;WIFRGS;WIKILRS;WILV##;WIMAP#;WIMINUS;WIMSTAR;WIMSTT;WINUM#;WIOST?;WIP#;WIPAR;WIPCNT;WISCRT2;WISPLAT;WISUCKS;WITIME;WIURH#;WIVCTMS;"
; zdoom gfx lumps
Entry : "CONBACK;FITEFACE;MAGEFACE;CLERFACE;FONTA##;FONTA###;M_PBOX;M_PSETUP;M_PSTTL;M_VIDMOD;M_GMPLAY;M_CONTRO;M_MESS;"
; eternity gfx lumps
Entry : "STBR###;DLGBACK;DIG?;DIG##;BOXU?;BOXC?;BOXL?;VPO;OPENSOCK;HU_FRAGS;HU_FRGBX;CROSS#;M_SETUP;M_GSET;M_JOYSET;M_DMFLAG;M_ABOUT;M_AUTO;M_CHATM;M_COLORS;M_COMPAT;M_DEMOS;M_ENEM;M_FEAT;M_HUD;M_KEYBND;M_LDSV;M_MOUSE;M_MULTI;M_PALNO;M_PLAYER;M_SERIAL;M_SLIDEL;M_SLIDEM;M_SLIDEO;M_SLIDER;M_SOUND;M_STAT;M_TCPIP;M_VIDEO;M_WAD;M_WEAP;M_BUTT#;MBFTEXT;UDTTL##;D2TTL##;M_ETCOPT;"
; legacy lumps
Entry : "M_CDVOL;M_SETUPM;M_SETUPA;M_SETUPB;M_2PLAYR;M_STSERV;M_CONNEC;M_SLIDEC;M_SINGLE;RANKINGS;SBOAMMO#;SBOEMPTY;SBOARMOR;SBOHEALT;SBOFRAGS;"
; edge lumps
Entry : "M_MSETTL;M_GAMEPL;M_CONTRL;EDGETTL;CREDIT2;AIRBAR##"
Editor : ImageEditor
Icon : gfx

[PNG]
Entry : "*.PNG"
Signature : "$89 $50 $4E $47"
Editor : ImageEditor
Icon : png

[IMAGE]
Entry : "*.JPG;*.TGA;*.BMP;*.PCX;*.pcx;*.DTX;*.NWX;*.FTX"
Editor : ImageEditor
Icon : image

[PALETTE]
Entry : "PLAYPAL;TITLEPAL;gfx/palette.lmp;PALETTE.DAT;palette;BPalette;*.PAL;PAL;*.COL;*.ACT;*.256;"
; zdoom palettes
Entry : "SPALDOOM;SPALHTIC;"
Signature : "w:(LumpLength-26)/14 w:$1A"
Editor : PaletteEditor
Icon : palette

[TERRAIN]
Entry : "TERTYPES"
Editor : GridEditor
Header : 2
8 FLATNAME "FLATNAME"
1 INT "Unknown1"
1 INT "Unknown2"
1 INT "Unknown3"

[ROTT WALL]
SectionStart : "WALLSTRT"
SectionEnd : "WALLSTOP"
Editor : ImageEditor
Icon : image

[ROTT GUN]
SectionStart : "GUNSTART"
SectionEnd : "GUNSTOP"
Editor : ImageEditor
Icon : image

[ROTT ANIM]
SectionStart : "ANIMSTRT"
SectionEnd : "ANIMSTOP"
Editor : ImageEditor
Icon : image

[ROTT EXIT]
SectionStart : "EXITSTRT"
SectionEnd : "EXITSTOP"
Editor : ImageEditor
Icon : image

[ROTT ELEV]
SectionStart : "ELEVSTRT"
SectionEnd : "ELEVSTOP"
Editor : ImageEditor
Icon : image

[ROTT DOOR]
SectionStart : "DOORSTRT"
SectionEnd : "DOORSTOP"
Editor : ImageEditor
Icon : image

[ROTT SIDE]
SectionStart : "SIDESTRT"
SectionEnd : "SIDESTOP"
Editor : ImageEditor
Icon : image

[ROTT SPRITE]
SectionStart : "SHAPSTRT"
SectionEnd : "SHAPSTOP"
Editor : ImageEditor
Icon : image

[ROTT MASK]
SectionStart : "MASKSTRT"
SectionEnd : "MASKSTOP"
Editor : ImageEditor
Icon : image

[ROTT UPDN]
SectionStart : "UPDNSTRT"
SectionEnd : "UPDNSTOP"
Editor : ImageEditor
Icon : image

[ROTT SKY]
SectionStart : "SKYSTART"
SectionEnd : "SKYSTOP"
Editor : ImageEditor
Icon : image

[ROTT SOUNDS]
SectionStart : "DIGISTRT"
SectionEnd : "DIGISTOP"
Editor : WaveEditor
ExportMethod : WAV
Icon : wave

[ROTT MUSICS]
SectionStart : "SONGSTRT"
SectionEnd : "SONGSTOP;PCSTART"
Editor : MusEditor
Icon : mus

[WAX]
Entry : "*.WAX"
Editor : WaxEditor

[ART]
Entry : "*.ART"
Editor : ArtEditor

[BSP]
Entry : "*.BSP"
Editor : BspEditor

[SPEAKERSOUND]
Entry: "DPBAREXP;DPBDCLS;DPBDOPN;DPBFG;DPBGACT;DPBGDTH1;DPBGDTH2;DPBGSIT1;DPBGSIT2;DPBOSCUB;DPBOSDTH;DPBOSPIT;DPBOSPN;DPBOSSIT;DPBRSDTH;DPBRSSIT;DPBSPACT;DPBSPDTH;DPBSPSIT;DPBSPWLK;DPCACDTH;DPCACSIT;DPCLAW;DPCYBDTH;DPCYBSIT;DPDBCLS;DPDBLOAD;DPDBOPN;DPDMACT;DPDMPAIN;DPDORCLS;DPDOROPN;DPDSHTGN;DPFIRSHT;DPFIRXPL;DPFLAME;DPFLAMST;DPGETPOW;DPHOOF;DPITEMUP;DPITMBK;DPKEENDT;DPKEENPN;DPKNTDTH;DPKNTSIT;DPMANATK;DPMANDTH;DPMANSIT;DPMETAL;DPMNPAIN;DPNOWAY;DPOOF;DPPDIEHI;DPPEDTH;DPPEPAIN;DPPESIT;DPPISTOL;DPPLASMA;DPPLDETH;DPPLPAIN;DPPODTH1;DPPODTH2;DPPODTH3;DPPOPAIN;DPPOSACT;DPPOSIT1;DPPOSIT2;DPPOSIT3;DPPSTART;DPPSTOP;DPPUNCH;DPRADIO;DPRLAUNC;DPRXPLOD;DPSAWFUL;DPSAWHIT;DPSAWIDL;DPSAWUP;DPSGCOCK;DPSGTATK;DPSGTDTH;DPSGTSIT;DPSHOTGN;DPSKEACT;DPSKEATK;DPSKEDTH;DPSKEPCH;DPSKESIT;DPSKESWG;DPSKLATK;DPSKLDTH;DPSLOP;DPSPIDTH;DPSPISIT;DPSSDTH;DPSSSIT;DPSTNMOV;DPSWTCHN;DPSWTCHX;DPTELEPT;DPTINK;DPVILACT;DPVILATK;DPVILDTH;DPVILSIT;DPVIPAIN;DPWPNUP"
Editor : SpeakerSoundEditor
Icon : speaker

[WAVESOUND]
Entry : "DS*;*.WAV;*.VOC;*.RAW;*.AUDLOG;*.OGG"
Signature : "$03 $00 ? ? L:(LumpLength-8)"
Editor : WaveEditor
ExportMethod : WAV
Icon : wave

[MUS]
Entry : "D_ADRIAN;D_AMPIE;D_BETWEE;D_BUNNY;D_COUNT2;D_COUNTD;D_DDTBL2;D_DDTBL3;D_DDTBLU;D_DEAD;D_DEAD2;D_DM2INT;D_DM2TTL;D_DOOM;D_DOOM2;D_E#M#;D_EVIL;D_IN_CIT;D_INTER;D_INTRO;D_INTROA;D_MESSAG;D_MESSG2;D_OPENIN;D_READ_M;D_ROMER2;D_ROMERO;D_RUNNI2;D_RUNNIN;D_SHAWN;D_SHAWN2;D_SHAWN3;D_STALKS;D_STLKS2;D_STLKS3;D_TENSE;D_THE_DA;D_THEDA2;D_THEDA3;D_ULTIMA;D_VICTOR;"
Entry : "*.IMF;*.MID;*.HMQ;*.HMP"
Signature : "$4D $55 $53 $1A"
Editor : MusEditor
Icon : mus

[MARKER]
Size : 0
Icon : marker

[FONT1]
Signature: $46 $4F $4E $31
Editor : FontEditor
Icon : font

[FONT2]
Signature: $46 $4F $4E $32
Editor : FontEditor
Icon : font

;
; XWE Script
; You can make more synonyms,
; but the numbers are hard coded
;
(XWESCRIPT)
Abort = 99
Stop = 99
End = 99

For = 100
Next = 101

If = 102
Else = 103
Endif = 104

Call = 105
Sub = 106
Return = 107
EndSub = 107

Left = 900
Right = 901
TurnAround = 902
Move = 903
MoveTo = 904
Down = 905
Up = 906

NewLineDef = 1000
NewLineDefTo = 1001
SetLineDefProperty = 1002
GetLineDefProperty = 1003
DeleteLineDef = 1004
LineDefDelete = 1004
SplitLineDef = 1010
SplitLineDef3 = 1011
SplitLineDefInThree = 1011
GetSelectedLineDef = 1020

NewThing = 2000
SetThingProperty = 2002
GetThingProperty = 2003

NewSector = 3000
SectorDuplicate = 3001
DuplicateSector = 3001
SetSectorProperty = 3002
SectorSetProperty = 3002
GetSectorProperty = 3003

SetVertexProperty = 4002
GetVertexProperty = 4003

PointInWhichSector = 5000
RotatePoint = 5001
DeselectAll = 5002

GetUserInput = 6000
UserInput = 6000
Input = 6000
UserInputNumber = 6001
InputNumber = 6001
Show = 6002
MsgBox = 6002
Message = 6002
ShowMessage = 6002
Say = 6002

Trim = 7000
UpperCase = 7001
ToUpper = 7001
LowerCase = 7002
ToLower = 7002
Random = 7010

(LINEDEFPROPERTY)
ID = 1
STARTVERTEX = 2
VERTEXSTART = 2
ENDVERTEX = 3
VERTEXEND = 3
FLAGS = 4
LinedefFlags = 4
TYPE = 5
TAG = 6
SIDEFRONT = 7
SIDEBACK = 8
ARG1 = 9
ARG2 = 10
ARG3 = 11
ARG4 = 12
ARG5 = 13
SELECTED = 14
FrontAboveTexture = 15
FrontMainTexture = 16
FrontTextureMain = 16
FrontBelowTexture = 17
FrontXOffset = 18
FrontYOffset = 19
FrontSector = 20
BackAboveTexture = 21
BackMainTexture = 22
BackTextureMain = 22
BackBelowTexture = 23
BackXOffset = 24
BackYOffset = 25
BackSector = 26
Angle = 27
Length = 28

(THINGPROPERTY)
ID = 1
X = 2
Y = 3
ANGLE = 4
FLAGS = 5
TAG = 6
Z = 7
SPECIAL = 8
ARG1 = 09
ARG2 = 10
ARG3 = 11
ARG4 = 12
ARG5 = 13

(SECTORPROPERTY)
ID = 1
FLOORHEIGHT = 2
CEILINGHEIGHT = 3
CeilHeight = 3
FLOORTEXTURE = 4
CEILINGTEXTURE = 5
CeilTexture = 5
LIGHT = 6
TYPE = 7
TAG = 8
SELECTED = 9

(VERTEXPROPERTY)
ID = 1
X = 2
Y = 3
XY = 4

;
; Skill Constants
;
(SKILL)
"I'm too young to die" = 0
"Not too rough"
"Hurt me plenty"
"Ultra violence"
"Nightmare!"

;
; Demo Version Constants
;
(DEMOVERSION)
"DOOM 1.4 beta" = 104
"DOOM 1.5 beta"
"DOOM 1.6 beta, DOOM 1.666 and DOOM ][ 1.666"
"DOOM ][ 1.7 and DOOM ][ 1.7a"
"DOOM 1.8 and DOOM ][ 1.8"
"(Ultimate) DOOM 1.9 and DOOM ][ 1.9"
"Published DOOM source"

;
; Color Constants
;
(BASIC_COLORS)
Black   = $00000000
Blue    = $00800000
Green   = $00008000
Teal    = $00808000
Maroon  = $00000080
Purple  = $00800080
Olive   = $00008080
Gray    = $00808080
DkGray  = $00404040
Navy    = $00FF0000
Lime    = $0000FF00
Aqua    = $00FFFF00
Red     = $000000FF
Fuchsia = $00FF00FF
Yellow  = $0000FFFF
White   = $00FFFFFF

;
; Midi Constants
;
(MIDI_INSTRUMENT)
	Acoustic Grand Piano = 0
	'Bright Acoustic Piano'
	'Electric Grand Piano'
	'Honky-tonk Piano'
	'Rhodes Piano'
	'Chorused Piano'
	'Harpsichord'
	'Clavinet'

  'Celesta'
  'Glockenspiel'
  'Music Box'
  'Vibraphone'
  'Marimba'
  'Xylophone'
	'Tubular Bells'
  'Dulcimer'

	'Hammond Organ'
	'Percussive Organ'
	'Rock Organ'
  'Church Organ'
  'Reed Organ'
  'Accordion'
  'Harmonica'
	'Tango Accordion'

  'Acoustic Guitar (nylon)'
  'Acoustic Guitar (steel)'
  'Electric Guitar (jazz)'
  'Electric Guitar (clean)'
  'Electric Guitar (muted)'
	'Overdriven Guitar'
  'Distortion Guitar'
  'Guitar Harmonics'

  'Acoustic Bass'
  'Electric Bass (fingered)'
  'Electric Bass (picked)'
  'Fretless Bass'
  'Slap Bass 1'
  'Slap Bass 2'
	'Synth Bass 1'
  'Synth Bass 2'

  'Violin'
  'Viola'
  'Cello'
  'Contrabass'
	'Tremolo Strings'
  'Pizzicato Strings'
  'Orchestral Harp'
  'Timpani'

	'String Ensemble 1'
  'String Ensemble 2'
	'Synth Strings 1'
  'Synth Strings 2'
  'Choir Aahs'
  'Voice Oohs'
  'Synth Voice'
  'Orchestra Hit'

  'Trumpet'
  'Trombone'
  'Tuba'
	'Muted Trumpet'
  'French Horn'
	'Brass Section'
  'Synth Brass 1'
  'Synth Brass 2'

  'Soprano Sax'
	'Alto Sax'
  'Tenor Sax'
  'Baritone Sax'
  'Oboe'
  'English Horn'
  'Bassoon'
  'Clarinet'

  'Piccolo'
  'Flute'
  'Recorder'
  'Pan Flute'
  'Blown Bottle'
  'Shakuhachi'
  'Whistle'
  'Ocarina'

	'Lead 1 (square)'
  'Lead 2 (sawtooth)'
	'Lead 3 (calliope)'
  'Lead 4 (chiff)'
  'Lead 5 (charang)'
  'Lead 6 (voice)'
  'Lead 7 (fifths)'
	'Lead 8 (bass + lead)'

  'Pad 1 (new age)'
  'Pad 2 (warm)'
  'Pad 3 (polysynth)'
  'Pad 4 (choir)'
  'Pad 5 (bowed)'
	'Pad 6 (metallic)'
  'Pad 7 (halo)'
  'Pad 8 (sweep)'

  'FX 1 (rain)'
  'FX 2 (soundtrack)'
  'FX 3 (crystal)'
  'FX 4 (atmosphere)'
  'FX 5 (brightness)'
  'FX 6 (goblins)'
	'FX 7 (echoes)'
  'FX 8 (sci-fi)'

  'Sitar'
  'Banjo'
  'Shamisen'
  'Koto'
	'Kalimba'
  'Bagpipe'
  'Fiddle'
	'Shanai'

	'Tinkle Bell'
  'Agogo'
	'Steel Drums'
  'Woodblock'
  'Taiko Drum'
  'Melodic Tom'
  'Synth Drum'
  'Reverse Cymbal'

  'Guitar Fret Noise'
  'Breath Noise'
  'Seashore'
	'Bird Tweet'
  'Telephone Ring'
	'Helicopter'
  'Applause'
  'Gunshot'

(MIDI_PERCUSSION)
	'Acoustic Bass Drum' = 35
  'Bass Drum 1'
  'Side Stick'
	'Acoustic Snare'
  'Hand Clap'

  'Electric Snare'
	'Low Floor Tom'
  'Closed Hi Hat'
  'High Floor Tom'
  'Pedal Hi Hat'

  'Low Tom'
  'Open Hi Hat'
  'Low-Mid Tom'
  'High-Mid Tom'
  'Crash Cymbal 1'

  'High Tom'
	'Ride Cymbal 1'
  'Chinese Cymbal'
  'Ride Bell'
  'Tambourine'

	'Splash Cymbal'
  'Cowbell'
  'Crash Cymbal 2'
	'Vibraslap'
  'Ride Cymbal 2'

  'High Bongo'
	'Low Bongo'
  'Mute High Conga'
  'Open High Conga'
  'Low Conga'

  'High Timbale'
  'Low Timbale'
  'High Agogo'
  'Low Agogo'
  'Cabase'

  'Maracas'
	'Short Whistle'
  'Long Whistle'
  'Short Guiro'
  'Long Guiro'

	'Claves'
  'High Wood Block'
  'Low Wood Block'
	'Mute Cuica'
  'Open Cuica'

  'Mute Triangle'
	'Open Triangle'

(MAPINFO)

SingleLineComments : //

Hub
Map
DefaultMap
Sky1
Sky2
Sky3
Sky4
Music
Next
SecretNext
Flat
Cluster
ClusterDef
EnterText
ExitText
Par
LevelNum
TitlePatch
Lookup
Fade

ClearEpisodes
Episode
Name

EvenLighting
Lightning
ForceNoSkyStretch

VertWallShade
HorizWallShade

NoIntermission
NoSoundClipping
FallingDamage
AllowMonsterTelefrags

BaronSpecial
CyberDemonSpecial
MinotaurSpecial
IronLichSpecial
DsparilSpecial
Map07Special
SpiderMastermindSpecial
SpecialAction_ExitLevel
SpecialAction_LowerFloor
SpecialAction_KillMonsters
SpecialAction_OpenDoor

(SNDINFO)

SingleLineComments : //
Operators : /

$Alias
$Limit
$Random
$PitchShift
$PitchShiftRange
$PlayerAlias
$PlayerReserve
$PlayerSound
$PlayerSoundDup

$IfDoom
$IfHeretic
$IfHexen
$IfStrife
$EndIf

(SNDSEQ)
SingleLineComments : //

End

NoStopCutoff
Play
PlayLoop
PlayRepeat
PlayUntilDone
StopSound

(SNDEAX)
AirAbsorptionHF
bDecayHFLimit
bEchoTimeScale
EchoDepth
EchoTime
Environment
EnvironmentSize
EnvironmentDiffusion
DecayTime
DecayHFRatio
DecayLFRatio
Diffusion
Density
ModulationTime
ModulationDepth
Room
RoomHF
RoomLF
Reflections
ReflectionsDelay
Reverb
ReverbDelay
HFReference
LFReference

(DECALDEF)

SingleLineComments : //

Fader
DecayStart
DecayTime
ColorChanger
FadeStart
FadeTime
Stretcher
StretchTime
GoalY
Slider
SlideTime
DistY
Combiner
Decal
Pic
Shade
X-Scale
Y-Scale
RandomFlipX
RandomFlipY
DecalGroup
Animator
Add
FullBright
LowerDecal
Generator

(DECORATE)

SingleLineComments : //

Actor
Pickup

MeleeDamage
ExplosionDamage
ExplosionRadius
Frames
Health
Mass
Speed
Radius
Height
PainChance
PickupMessage
PickupSound
DeathSound
DoomEdNum
SpawnNum
SeeSound
PainSound
Sprite
ActiveSound
AttackSound
Obituary
HitObituary
Scale
MissileType
MissileHeight
DropItem
DeathFrames

Solid
LowGravity
NoGravity
NoSector
SpawnCeiling
Pushable
NoBlood
DiesAway
ActivateMCross
ActivateImpact
RenderStyle
Alpha
FloorClip
Invulnerable

States
Spawn
See
Missile
Melee
Pain
Death
XDeath   
Raise
Goto
Loop
Stop

A_Look
A_Chase     
A_FaceTarget
A_Pain
A_Scream    
A_Fall
A_XScream
A_PosAttack
A_CPosRefire
A_CyberAttack
A_MissileAttack
A_CustomMissile
A_BspiAttack
A_PlaySound
A_MeleeAttack

(TERRAIN)

SingleLineComments : //

Splash
SmallClass
SmallClip
SmallSound
BaseClass
Chunkclass
Chunkxvelshift
Chunkyvelshift
Chunkzvelshift
ChunkBaseZVel
Sound

Terrain
Splash
FootClip
Liquid

IfDoom
Floor
EndIf

(DEHACKED)

SingleLineComments : #
Operators : =,+,|

Doom Version
Patch Format

Thing
Frame
Speed
Hit Points
Mass
Duration
Sprite Number
Sprite SubNumber

Death Frame
Next Frame
Initial Frame
Shooting Frame
First Moving Frame
Injury Frame
Close Attack Frame
Far Attack Frame
Exploding Frame
Respawn Frame

Pain Chance     

Width
Height
Bits
Scale

Action Sound
Death Sound
Pain Sound
Alert Sound
Attack Sound
Weapon

Cheat
Chainsaw
Ammo & Keys

SPECIAL Item can respawn and be picked up
SOLID Blocks other things
SHOOTABLE Can be shot
NOSECTOR Not linked in with a sector (making it invisible)
NOBLOCKMAP Not linked into the blockmap (making it inert)
AMBUSH Will only wake up on sight of a player
JUSTHIT Monster will immediately attack
JUSTATTACKED Will take at least one step back before attacking
SPAWNCEILING Thing hangs from the ceiling 
NOGRAVITY Gravity is not applied to the thing 
DROPOFF Can fall off ledges
PICKUP Can pickup items (only applicable to player)
NOCLIP Can pass through solid objects 
FLOAT Can float up or down
TELEPORT Does not activate special lines when it moves 
MISSILE Is a missile 
DROPPED Was dropped and will not respawn 
SHADOW Drawn with the fuzz effect
NOBLOOD Uses puffs when shot instead of blood 
CORPSE Is dead
INFLOAT Is in the middle of a float up or down 
COUNTKILL Is a monster
COUNTITEM Is included in the total count of items
SKULLFLY Special handling for a skull in flight 
NOTDMATCH Is not spawned in deathmatch
STEALTH Is a stealth monster 
TRANSLUC25 Drawn with 25% translucency 
TRANSLUC50 Drawn with 50% translucency
TRANSLUC75 Drawn with 75% translucency 
LOGRAV Only one-third gravity is applied to it 
FLOORBOUNCE Bounces off of floors and walls
SPAWNFLOAT Spawns at a random z location
PUSHABLE Can be pushed
CANSLIDE Can slide along walls
ONMOBJ Is currently standing on top of another thing
PASSMOBJ Can pass under/over other things
CANNOTPUSH Cannot push other things
BOSS Sight and death sounds are played in surround sound
FLOATBOB Objects bobs up and down
DONTDRAWN Is not drawn
IMPACT Can activate projectile hit specials
PUSHWALL Can activate push specials
MCROSS Can activate monster cross specials
PCROSS Can activate projectile cross specials
INVULNERABLE Thing takes no damage
REFLECTIVE Missiles bounce off of it

(DDF)
SingleLineComments : //

(ANIMDEFS)
SingleLineComments : //
Texture
Flat
Warp
Switch
Tics
Pic
Rand
Sound
AllowDecals

(KEYCONF)              
SingleLineComments : //
addkeysection
addmenukey
alias
defaultbind

<Louder:WaveSound>
Input ( "Percent", Mul )
Mul = Mul + 100
For i, 0, WaveSize
	GetWaveData ( i, b )
	b = b * Mul
	SetWaveData ( i, b )
Next i

(ACSSCRIPT)

SingleLineComments : //
Operators : +,-,*,/,&,>>,<<

Break
Case
Const
Continue
Default
Define
Do
Else
For
Function
Goto
If
Include
Int
Open
Print
PrintBold
Restart
Script
Special
Str
Suspend
Switch
Terminate
Until
Void
While
World


ActivatorTID(void)
GameSkill(void)
GameType(void)
GetActorCeilingZ (int tid)
GetActorFloorZ (int tid)
GetActorX(int tid)
GetActorY(int tid)
GetActorZ(int tid)
GetActorAngle(int tid)
GetActorProperty(int tid, int property)
GetAmmoCapacity (str typename)
getcvar (str name)
GetLevelInfo(int levelinfo)
GetLineRowOffset(void)
GetScreenWidth(void)
GetScreenHeight(void)
GetSectorCeilingZ (int tag, int x, int y)
GetSectorFloorZ (int tag, int x, int y)
GetSectorLightLevel (int tag)
LineSide(void)
PlayerCount(void)
PlayerInGame(int playernumber)
PlayerIsBot(int playernumber)
PlayerNumber(void)
SetResultValue (int value)

cos(int angle)
fixeddiv(fixed a, fixed b)
fixedmul(fixed a, fixed b)
sin(int angle)
strlen(str string)
VectorAngle(fixed x, fixed y)
Random(int low, int high)
ThingCount(int type, int tid)
Timer(void)
AmbientSound(str name, int volume)
ChangeCamera
ChangeCeiling(int tag, str flatname)
ChangeFloor(int tag, str flatname)
changesky(str sky1, str sky2)
ClearLineSpecial(void)
SetAirControl(amount)
setcameratotexture(int cameratid, str texturename, int fov)
SetCeilingTrigger (int tag, int height, int special, int arg1, int arg2, int arg3, int arg4, int arg5)
SetFloorTrigger (int tag, int height, int special, int arg1, int arg2, int arg3, int arg4, int arg5)
SetGravity (fixed amount)
SetLineMonsterBlocking(int lineid, int setting)
Delay(int ticks)
PolyWait(int po)
ScriptWait(int script)
SetLineBlocking(int line, int blocking)
SetLineSpecial(int line, int special, int arg1, int arg2, int arg3, int arg4, int arg5)
SetLineTexture(int line, int side, int position, str texturename)
SoundSequence(str name)
TagWait(int tag)
ThingSound(int tid, str name, int volume)
ActivatorSound ( ?, ? )
LocalAmbientSound ( ?, ? )

CheckInventory(str inventory_item)
CheckWeapon (str weapon)
ClearInventory(void)
GiveInventory(str inventory_item, int amount)
SetWeapon(str weaponname)
TakeInventory(str inventory_item, int amount)
CheckActorInventory(int tid, str inventory_item)
ClearActorInventory(int tid)


TranslucentLine ( lineid, amount )

SectorSound(str name, int volume)
Sector_SetGravity ( tag, ipart, fpart )
Sector_SetColor ( tag, r, g, b ) // Sets the color of light in a sector. By default, sectors have white light (red, green, blue are all 255). If a sector's color is changed during gameplay, another sector should already have the desired color (possibly by using an open script to set the color of a dummy sector that the player will never see). This is because there can be a noticable delay while the game constructs the tables for a color for the first time. You can use the testcolor console command to test a color from within the game.
Sector_SetFade ( tag, r, g, b ) // Sets the color that lights in the tagged sectors fade to. By default, this is whatever the level's fadeto is specified as being in a MAPINFO lump, or black, if it doesn't specify a fadeto. The note about changing a sector's color during the middle of gameplay also applies here. You can use the testfade console command to test a fade from within the game.
Sector_SetRotation ( tag, floorangle, ceilingangle )
Sector_SetFloorScale ( tag, arg2, arg3, arg4, arg5 )
Sector_SetCeilingScale ( tag, arg2, arg3, arg4, arg5 )
Sector_SetFloorPanning ( tag, u-int, u-frac, v-int, v-frac )
Sector_SetCeilingPanning ( tag, u-int, u-frac, v-int, v-frac )
Sector_SetWind ( tag, amount, angle, useline )
Sector_SetCurrent ( tag, amount, angle, useline )
Sector_SetDamage ( tag, amount, mod ) // Sets the amount of damage done to a player in a sector. This is in addition to whatever is specified by the sector's special. Damage amount below 20 will only hurt the player if he doesn't have an environment suit. Damages between 20-49 will occasionally hurt the player even with an environment suit on. Damages of 50 and above will always hurt the player unless he is in god mode.
Sector_SetFriction ( tag, amount )
Static_Init (tag, prop, flip)

ACS_Execute ( script, map, s_arg1, s_arg2, s_arg3 )
ACS_ExecuteWait (script, 0, s_arg1, s_arg2, s_arg3 )
ACS_ExecuteAlways (script, map, s_arg1, s_arg2, s_arg3)
ACS_ExecuteWithResult (script, s_arg1, s_arg2, s_arg3)
ACS_LockedExecute ( script, map, s_arg1, s_arg2, lock )
ACS_LockedExecuteDoor (script, map, s_arg1, s_arg2, lock)
ACS_Suspend ( script, map, arg3, arg4, arg5 )
ACS_Terminate ( script, map, arg3, arg4, arg5 )


Ceiling_Waggle(tag, amp, freq, offset, time)
Ceiling_CrushAndRaise ( tag, speed, crush, arg4, arg5 )
Ceiling_CrushRaiseAndStay ( tag, speed, crush, arg4, arg5 )
Ceiling_CrushStop ( tag, arg2, arg3, arg4, arg5 )
Ceiling_MoveToValueTimes8 (tag, speed, height, neg)
Ceiling_LowerToHighestFloor (tag, speed)
Ceiling_LowerAndCrush ( tag, speed, crush, arg4, arg5 )
Ceiling_LowerByValue ( tag, speed, height, arg4, arg5 )
Ceiling_LowerInstant ( tag, speed, height )
Ceiling_RaiseInstant (tag, arg1, height)
Ceiling_RaiseByValue ( tag, speed, height, arg4,arg5 )
Ceiling_CrushRaiseAndStayA (tag, dspeed, uspeed, crush)
Ceiling_CrushAndRaiseA (tag, dspeed, uspeed, crush)
Ceiling_CrushAndRaiseSilentA (tag, dspeed, uspeed, crush)
Ceiling_RaiseByValueTimes8 (tag, speed, height)
Ceiling_LowerByValueTimes8 (tag, speed, height)
Ceiling_RaiseToNearest (tag, speed)
Ceiling_LowerToLowest (tag, speed)
Ceiling_LowerToFloor (tag, speed)
Ceiling_CrushRaiseAndStaySilA (tag, dspeed, uspeed, crush)


DamageThing ( damage, arg2, arg3, arg4, arg5 )
HealThing (amount)
Door_Close ( tag, speed, arg3, arg4, arg5 )
Door_LockedRaise ( tag, speed, delay, lock, arg5 )
Door_Animated (tag, speed, delay)
Door_CloseWaitOpen (tag, speed, delay, lighttag)
Door_Open ( tag, speed, arg3, arg4, arg5 )
Door_Raise ( tag, speed, delay, arg4, arg5 )
Elevator_LowerToNearest (tag, speed)
Elevator_MoveToFloor (tag, speed)
Elevator_RaiseToNearest (tag, speed)

Floor_CrushStop ( tag, arg2, arg3, arg4, arg5 )
Floor_LowerByValue ( tag, speed, height, arg4, arg5 )
Floor_LowerByValueTimes8 ( tag, speed, height, arg4, arg5 )
Floor_LowerInstant ( tag, arg2, height, arg4, arg5 )
Floor_LowerToLowest ( tag, speed, arg3, arg4, arg5 )
Floor_LowerToNearest ( tag, speed, arg3, arg4, arg5 )
Floor_RaiseAndCrush ( tag, speed, crush, arg4, arg5 )
Floor_RaiseByValue ( tag, speed, height, arg4, arg5 )
Floor_RaiseByValueTimes8 ( tag, speed, height, arg4, arg5 )
Floor_RaiseInstant ( tag, arg2, height, arg4, arg5 )
Floor_MoveToValueTimes8 (tag, speed, height, neg)
Floor_RaiseToHighest ( tag, speed, arg3, arg4, arg5 )
Floor_RaiseToNearest ( tag, speed, arg3, arg4, arg5 )
Floor_Waggle ( tag, amp, freq, offset, time ) // "Waggles" the floor of the affected sectors in a sine wave.
Floor_RaiseToLowestCeiling (tag, speed)
Floor_RaiseByValueTxTy (tag, speed, height)
Floor_RaiseByTexture (tag, speed)
Floor_LowerToLowestTxTy (tag, speed)
Floor_LowerToHighest (tag, speed, adjust)
Floor_Donut (ptag, pspeed, sspeed)
Floor_TransferTrigger (tag)
Floor_TransferNumeric (tag)

Generic_Floor (tag, speed, height, target, flags)
Generic_Ceiling (tag, speed, height, target, flag)
Generic_Door (tag, speed, kind, delay, lock)
Generic_Lift (tag, speed, delay, type, height)
Generic_Stairs (tag, speed, height, flags, reset)
Generic_Crusher (tag, dspeed, uspeed, silent, crush)

Line_Horizon(no parameters required)
Line_Mirror(no parameters required)
Line_AlignFloor (lineid, side)
Line_AlignCeiling (lineid, side)
Transfer_Heights (tag, when)
Transfer_FloorLight (tag)
Transfer_CeilingLight (tag)
Transfer_WallLight (tag, nofakecontrast)
ExtraFloor_LightOnly(tag, type)

Light_ChangeToValue ( tag, value, arg3, arg4, arg5 )
Light_Fade ( tag, value, tics, arg4, arg5 )
Light_Flicker ( tag, upper, lower, arg4, arg5 )
Light_ForceLightning
Light_Glow ( tag, upper, lower, tics, arg5 )
Light_LowerByValue ( tag, value, arg3, arg4, arg5 )
Light_MaxNeighbor (tag)
Light_MinNeighbor (tag)
Light_RaiseByValue ( tag, value, arg3, arg4, arg5 )
Light_Stop (tag)
Light_Strobe ( tag, upper, lower, u-tics, l-tics )
Light_StrobeDoom (tag, u-tics, l-tics)

Line_SetIdentification ( line, arg2, arg3, arg4, arg5 )
Pillar_Build ( tag, speed, height, arg4, arg5 )
Pillar_BuildAndCrush ( tag, speed, height, crush, arg5 )
Pillar_Open ( tag, speed, f_height, c_height, arg5 )
FloorAndCeiling_LowerByValue (tag, speed, height)
FloorAndCeiling_RaiseByValue (tag, speed, height)
FloorAndCeiling_LowerRaise (tag, fspeed, cspeed)

Plane_Align(floor, ceiling)

Plat_DownByValue ( tag, speed, delay, height, arg5 )
Plat_DownWaitUpStay ( tag, speed, delay, arg4, arg5 )
Plat_DownWaitUpStayLip (tag, speed, delay, lip)
Plat_PerpetualRaise ( tag, speed, delay, arg4, arg5 )
Plat_PerpetualRaiseLip (tag, speed, delay, lip)
Plat_RaiseAndStayTx0 (tag, speed)
Plat_Stop ( tag, arg2, arg3, arg4, arg5 )
Plat_ToggleCeiling (tag)
Plat_UpNearestWaitDownStay (tag, speed, delay)
Plat_UpByValue ( tag, speed, delay, height, arg5 )
Plat_UpByValueStayTx (tag, speed, height)
Plat_UpWaitDownStay ( tag, speed, delay, arg4, arg5 )

Polyobj_DoorSlide ( po, speed, angle, distance, delay )
Polyobj_DoorSwing ( po, speed, angle, delay, arg5 )
Polyobj_ExplicitLine ( po, order, mirror, sound, arg5 )
Polyobj_Move ( po, speed, angle, distance, arg5 )
Polyobj_MoveTimes8 ( po, speed, angle, distance, arg5 )
Polyobj_OR_Move ( po, speed, angle, distance, arg5 )
Polyobj_OR_MoveTimes8 ( po, speed, angle, distance, arg5 )
Polyobj_OR_RotateLeft ( po, speed, angle, arg4, arg5 )
Polyobj_OR_RotateRight ( po, speed, angle, arg4, arg5 )
Polyobj_RotateLeft ( po, speed, angle, arg4, arg5 )
Polyobj_RotateRight ( po, speed, angle, arg4, arg5 )
Polyobj_StartLine ( po, mirror, sound, arg4, arg5 )
Radius_Quake ( intensity, duration, damrad, tremrad, tid )
Scroll_Texture_Down ( speed, arg2, arg3, arg4, arg5 )
Scroll_Texture_Left ( speed, arg2, arg3, arg4, arg5 )
Scroll_Texture_Right ( speed, arg2, arg3, arg4, arg5 )
Scroll_Texture_Up ( speed, arg2, arg3, arg4, arg5 )
Scroll_Texture_Both (lineid, left, right, down, up)
Scroll_Texture_Model (lineid, scrollbits)
Scroll_Texture_Offsets
Scroll_Floor (tag, scrollbits, unused, x-move, y-move)
Scroll_Ceiling (tag, scrollbits, unused, x-move, y-move)
Sector_ChangeSound ( tag, sound, arg3, arg4,  arg5 )
Stairs_BuildDown ( tag, speed, height, delay, reset )
Stairs_BuildDownSync ( tag, speed, height, reset, arg5 )
Stairs_BuildUp ( tag, speed, height, delay, reset )
Stairs_BuildUpSync ( tag, speed, height, reset, arg5 )
Stairs_BuildUpDoom (tag, speed, height, delay, reset)

Teleport_ZombieChanger (tid, tag)
Teleport ( tid ) // Teleports the activating thing to a new location.
Teleport_EndGame ( arg1, arg2, arg3, arg4, arg5 )
Teleport_NewMap ( map, position, arg3, arg4, arg5 )
Teleport_NoFog ( tid, arg2, arg3, arg4, arg5 )
Teleport_Line ( thisid, destid, flip ) // 215 Silently teleports a thing between two lines. A pair of lines with this special can share the same id (thisid and destid are the same) because a line will never teleport to itself. This special also behaves like Line_SetIdentification by setting the line ID of the any lines it is used on. 
TeleportOther(tid, destination tid, fog?)
TeleportGroup(group tid, source tid, destination tid, move source?, fog?)
TeleportInSector (tag, source tid, destination tid, fog?, group tid)

Exit_Normal (pos)
Exit_Secret (pos)

Thing_Activate ( tid, arg2, arg3, arg4, arg5 )
Thing_Deactivate ( tid, arg2, arg3, arg4, arg5 )
Thing_Destroy ( tid, arg2, arg3, arg4, arg5 )
Thing_Projectile ( tid, type, angle, speed, vspeed )
Thing_ProjectileGravity ( tid, type, angle, speed, vspeed )
Thing_Remove ( tid, arg2, arg3, arg4, arg5 )
Thing_Spawn ( tid, type, angle, arg4, arg5 )
Thing_SpawnNoFog ( tid, type, angle, arg4, arg5 )
Thing_SpawnFacing (tid, type, nofog, newtid)
Thing_ProjectileIntercept(tid, type, speed, target, newtid)
Thing_ProjectileAimed (tid, type, speed, target, newtid)
Thing_Damage(tid, amount, MOD)
Thing_Move (tid, destid, nofog)
Thing_SetSpecial (tid, special, arg1, arg2, arg3)
Thing_ChangeTID (oldtid, newtid)
Thing_Raise(tid)
ThrustThing ( angle, distance, arg3, arg4, arg5 )
ThrustThingZ ( arg1, arg2, arg3, arg4, arg5 )
UsePuzzleItem ( item, script, s_arg1, s_arg2, s_arg3 )
CreateTranslation( arg1, arg2 )
Thing_SetTranslation( arg1, arg2 )
SpawnSpot ( arg1, arg2, arg3, arg4 )
SetMarineWeapon ( tag, weapon )
Thing_Hate ( arg1, arg2, arg3 )
Thing_SetGoal ( tag, arg2, arg3 )
SetActorAngle (int tid, int angle)
SetActorProperty(int tid, int property, int value)
setammocapacity(str typename, int maxamount)
SetMarineSprite(int tid, str actorclass)
SetThingSpecial (tid, special, arg0, arg1, arg2, arg3, arg4)
Spawn(str actorclass, fixed x, fixed y, fixed z, int tid, int angle)
SpawnProjectile (int tid, string type, int angle, int speed, int vspeed, int gravity, int newtid)
Thing_Projectile2 (int tid, int type, int angle, int speed, int vspeed, int gravity, int newtid);

FadeTo
FadeRange
CancelFade ()

SetMusic
LocalSetMusic

PlayMovie (str moviename)

SetFont(str fontlump)
SetHudSize ( width, height, statusbar )
HudMessage ( text, int type, int id, int color, fixed x, fixed y, fixed holdTime )
HudMessageBold ( text, int type, int id, int color, fixed x, fixed y, fixed holdTime )

SetPlayerProperty (who, set, which)
StartConversation (talker_tid, facetalker)
ForceField (No parameters required)
ClearForceField (tag)
GlassBreak (dontspawnjunk)
NoiseAlert (target_tid, emitter_tid)
ChangeSkill (skill)
PointPush_SetForce (tag, tid, amount, useline)

AutoSave

(TOOLS)
;
; Feel free to change these
; XWE will ask for location or find the file automatically
;
MainWAD,C:\Doom\DOOM2\,DOOM2.WAD
;MainWAD,D:\Software\Program Files\Games\Doom\Doom2\,DOOM2.WAD
;MainWAD,C:\Doom\DOOM2\,DOOM2.WAD
Run Map,C:\Doom\ZDooM\,ZDOOM.EXE
Nodes Builder,C:\Doom\TOOLS\ZenNode\win32\,ZENNODE.EXE
Action Script Compiler,C:\Doom\builder\,ACC.EXE
Mus2Midi Utility,C:\Doom\TOOLS\Mus2Mid\,MUS2MIDI.EXE
;MainWAD,C:\Doom\Others\Hexen\,HEXEN.WAD
;Midi2Mus Utility,C:\Doom\TOOLS\DeePsea\,MIDI2MUS.EXE
DeuSF Utility,C:\Doom\TOOLS\wintex43\,DEUSF.EXE

